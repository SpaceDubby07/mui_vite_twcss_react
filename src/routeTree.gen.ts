/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardUsersImport } from './routes/dashboard/users'
import { Route as DashboardUserProfilesImport } from './routes/dashboard/userProfiles'
import { Route as DashboardUserImagesImport } from './routes/dashboard/userImages'
import { Route as DashboardPostsImport } from './routes/dashboard/posts'
import { Route as DashboardMatchesImport } from './routes/dashboard/matches'
import { Route as DashboardFollowsImport } from './routes/dashboard/follows'
import { Route as DashboardCommentsImport } from './routes/dashboard/comments'
import { Route as HomeUserIdIndexImport } from './routes/home/$userId/index'
import { Route as HomeUserIdSubscriptionsImport } from './routes/home/$userId/subscriptions'
import { Route as HomeUserIdSettingsImport } from './routes/home/$userId/settings'
import { Route as HomeUserIdProfileImport } from './routes/home/$userId/profile'
import { Route as HomeUserIdPostsImport } from './routes/home/$userId/posts'
import { Route as HomeUserIdMessagesImport } from './routes/home/$userId/messages'
import { Route as HomeUserIdMatchesImport } from './routes/home/$userId/matches'
import { Route as HomeUserIdLikesSentImport } from './routes/home/$userId/likes-sent'
import { Route as HomeUserIdLikesReceivedImport } from './routes/home/$userId/likes-received'
import { Route as HomeUserIdEventsImport } from './routes/home/$userId/events'
import { Route as HomeUserIdCommentsImport } from './routes/home/$userId/comments'
import { Route as HomeUserIdBlockedImport } from './routes/home/$userId/blocked'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const HomeLazyImport = createFileRoute('/home')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const HomeLazyRoute = HomeLazyImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const HomeIndexRoute = HomeIndexImport.update({
  path: '/',
  getParentRoute: () => HomeLazyRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  path: '/users',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardUserProfilesRoute = DashboardUserProfilesImport.update({
  path: '/userProfiles',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardUserImagesRoute = DashboardUserImagesImport.update({
  path: '/userImages',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardPostsRoute = DashboardPostsImport.update({
  path: '/posts',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardMatchesRoute = DashboardMatchesImport.update({
  path: '/matches',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardFollowsRoute = DashboardFollowsImport.update({
  path: '/follows',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const DashboardCommentsRoute = DashboardCommentsImport.update({
  path: '/comments',
  getParentRoute: () => DashboardLazyRoute,
} as any)

const HomeUserIdIndexRoute = HomeUserIdIndexImport.update({
  path: '/$userId/',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdSubscriptionsRoute = HomeUserIdSubscriptionsImport.update({
  path: '/$userId/subscriptions',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdSettingsRoute = HomeUserIdSettingsImport.update({
  path: '/$userId/settings',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdProfileRoute = HomeUserIdProfileImport.update({
  path: '/$userId/profile',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdPostsRoute = HomeUserIdPostsImport.update({
  path: '/$userId/posts',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdMessagesRoute = HomeUserIdMessagesImport.update({
  path: '/$userId/messages',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdMatchesRoute = HomeUserIdMatchesImport.update({
  path: '/$userId/matches',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdLikesSentRoute = HomeUserIdLikesSentImport.update({
  path: '/$userId/likes-sent',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdLikesReceivedRoute = HomeUserIdLikesReceivedImport.update({
  path: '/$userId/likes-received',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdEventsRoute = HomeUserIdEventsImport.update({
  path: '/$userId/events',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdCommentsRoute = HomeUserIdCommentsImport.update({
  path: '/$userId/comments',
  getParentRoute: () => HomeLazyRoute,
} as any)

const HomeUserIdBlockedRoute = HomeUserIdBlockedImport.update({
  path: '/$userId/blocked',
  getParentRoute: () => HomeLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/comments': {
      id: '/dashboard/comments'
      path: '/comments'
      fullPath: '/dashboard/comments'
      preLoaderRoute: typeof DashboardCommentsImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/follows': {
      id: '/dashboard/follows'
      path: '/follows'
      fullPath: '/dashboard/follows'
      preLoaderRoute: typeof DashboardFollowsImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/matches': {
      id: '/dashboard/matches'
      path: '/matches'
      fullPath: '/dashboard/matches'
      preLoaderRoute: typeof DashboardMatchesImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/posts': {
      id: '/dashboard/posts'
      path: '/posts'
      fullPath: '/dashboard/posts'
      preLoaderRoute: typeof DashboardPostsImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/userImages': {
      id: '/dashboard/userImages'
      path: '/userImages'
      fullPath: '/dashboard/userImages'
      preLoaderRoute: typeof DashboardUserImagesImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/userProfiles': {
      id: '/dashboard/userProfiles'
      path: '/userProfiles'
      fullPath: '/dashboard/userProfiles'
      preLoaderRoute: typeof DashboardUserProfilesImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardLazyImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardLazyImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/blocked': {
      id: '/home/$userId/blocked'
      path: '/$userId/blocked'
      fullPath: '/home/$userId/blocked'
      preLoaderRoute: typeof HomeUserIdBlockedImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/comments': {
      id: '/home/$userId/comments'
      path: '/$userId/comments'
      fullPath: '/home/$userId/comments'
      preLoaderRoute: typeof HomeUserIdCommentsImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/events': {
      id: '/home/$userId/events'
      path: '/$userId/events'
      fullPath: '/home/$userId/events'
      preLoaderRoute: typeof HomeUserIdEventsImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/likes-received': {
      id: '/home/$userId/likes-received'
      path: '/$userId/likes-received'
      fullPath: '/home/$userId/likes-received'
      preLoaderRoute: typeof HomeUserIdLikesReceivedImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/likes-sent': {
      id: '/home/$userId/likes-sent'
      path: '/$userId/likes-sent'
      fullPath: '/home/$userId/likes-sent'
      preLoaderRoute: typeof HomeUserIdLikesSentImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/matches': {
      id: '/home/$userId/matches'
      path: '/$userId/matches'
      fullPath: '/home/$userId/matches'
      preLoaderRoute: typeof HomeUserIdMatchesImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/messages': {
      id: '/home/$userId/messages'
      path: '/$userId/messages'
      fullPath: '/home/$userId/messages'
      preLoaderRoute: typeof HomeUserIdMessagesImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/posts': {
      id: '/home/$userId/posts'
      path: '/$userId/posts'
      fullPath: '/home/$userId/posts'
      preLoaderRoute: typeof HomeUserIdPostsImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/profile': {
      id: '/home/$userId/profile'
      path: '/$userId/profile'
      fullPath: '/home/$userId/profile'
      preLoaderRoute: typeof HomeUserIdProfileImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/settings': {
      id: '/home/$userId/settings'
      path: '/$userId/settings'
      fullPath: '/home/$userId/settings'
      preLoaderRoute: typeof HomeUserIdSettingsImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/subscriptions': {
      id: '/home/$userId/subscriptions'
      path: '/$userId/subscriptions'
      fullPath: '/home/$userId/subscriptions'
      preLoaderRoute: typeof HomeUserIdSubscriptionsImport
      parentRoute: typeof HomeLazyImport
    }
    '/home/$userId/': {
      id: '/home/$userId/'
      path: '/$userId'
      fullPath: '/home/$userId'
      preLoaderRoute: typeof HomeUserIdIndexImport
      parentRoute: typeof HomeLazyImport
    }
  }
}

// Create and export the route tree

interface DashboardLazyRouteChildren {
  DashboardCommentsRoute: typeof DashboardCommentsRoute
  DashboardFollowsRoute: typeof DashboardFollowsRoute
  DashboardMatchesRoute: typeof DashboardMatchesRoute
  DashboardPostsRoute: typeof DashboardPostsRoute
  DashboardUserImagesRoute: typeof DashboardUserImagesRoute
  DashboardUserProfilesRoute: typeof DashboardUserProfilesRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardLazyRouteChildren: DashboardLazyRouteChildren = {
  DashboardCommentsRoute: DashboardCommentsRoute,
  DashboardFollowsRoute: DashboardFollowsRoute,
  DashboardMatchesRoute: DashboardMatchesRoute,
  DashboardPostsRoute: DashboardPostsRoute,
  DashboardUserImagesRoute: DashboardUserImagesRoute,
  DashboardUserProfilesRoute: DashboardUserProfilesRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardLazyRouteWithChildren = DashboardLazyRoute._addFileChildren(
  DashboardLazyRouteChildren,
)

interface HomeLazyRouteChildren {
  HomeIndexRoute: typeof HomeIndexRoute
  HomeUserIdBlockedRoute: typeof HomeUserIdBlockedRoute
  HomeUserIdCommentsRoute: typeof HomeUserIdCommentsRoute
  HomeUserIdEventsRoute: typeof HomeUserIdEventsRoute
  HomeUserIdLikesReceivedRoute: typeof HomeUserIdLikesReceivedRoute
  HomeUserIdLikesSentRoute: typeof HomeUserIdLikesSentRoute
  HomeUserIdMatchesRoute: typeof HomeUserIdMatchesRoute
  HomeUserIdMessagesRoute: typeof HomeUserIdMessagesRoute
  HomeUserIdPostsRoute: typeof HomeUserIdPostsRoute
  HomeUserIdProfileRoute: typeof HomeUserIdProfileRoute
  HomeUserIdSettingsRoute: typeof HomeUserIdSettingsRoute
  HomeUserIdSubscriptionsRoute: typeof HomeUserIdSubscriptionsRoute
  HomeUserIdIndexRoute: typeof HomeUserIdIndexRoute
}

const HomeLazyRouteChildren: HomeLazyRouteChildren = {
  HomeIndexRoute: HomeIndexRoute,
  HomeUserIdBlockedRoute: HomeUserIdBlockedRoute,
  HomeUserIdCommentsRoute: HomeUserIdCommentsRoute,
  HomeUserIdEventsRoute: HomeUserIdEventsRoute,
  HomeUserIdLikesReceivedRoute: HomeUserIdLikesReceivedRoute,
  HomeUserIdLikesSentRoute: HomeUserIdLikesSentRoute,
  HomeUserIdMatchesRoute: HomeUserIdMatchesRoute,
  HomeUserIdMessagesRoute: HomeUserIdMessagesRoute,
  HomeUserIdPostsRoute: HomeUserIdPostsRoute,
  HomeUserIdProfileRoute: HomeUserIdProfileRoute,
  HomeUserIdSettingsRoute: HomeUserIdSettingsRoute,
  HomeUserIdSubscriptionsRoute: HomeUserIdSubscriptionsRoute,
  HomeUserIdIndexRoute: HomeUserIdIndexRoute,
}

const HomeLazyRouteWithChildren = HomeLazyRoute._addFileChildren(
  HomeLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dashboard': typeof DashboardLazyRouteWithChildren
  '/home': typeof HomeLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/dashboard/comments': typeof DashboardCommentsRoute
  '/dashboard/follows': typeof DashboardFollowsRoute
  '/dashboard/matches': typeof DashboardMatchesRoute
  '/dashboard/posts': typeof DashboardPostsRoute
  '/dashboard/userImages': typeof DashboardUserImagesRoute
  '/dashboard/userProfiles': typeof DashboardUserProfilesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/home/': typeof HomeIndexRoute
  '/home/$userId/blocked': typeof HomeUserIdBlockedRoute
  '/home/$userId/comments': typeof HomeUserIdCommentsRoute
  '/home/$userId/events': typeof HomeUserIdEventsRoute
  '/home/$userId/likes-received': typeof HomeUserIdLikesReceivedRoute
  '/home/$userId/likes-sent': typeof HomeUserIdLikesSentRoute
  '/home/$userId/matches': typeof HomeUserIdMatchesRoute
  '/home/$userId/messages': typeof HomeUserIdMessagesRoute
  '/home/$userId/posts': typeof HomeUserIdPostsRoute
  '/home/$userId/profile': typeof HomeUserIdProfileRoute
  '/home/$userId/settings': typeof HomeUserIdSettingsRoute
  '/home/$userId/subscriptions': typeof HomeUserIdSubscriptionsRoute
  '/home/$userId': typeof HomeUserIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/dashboard/comments': typeof DashboardCommentsRoute
  '/dashboard/follows': typeof DashboardFollowsRoute
  '/dashboard/matches': typeof DashboardMatchesRoute
  '/dashboard/posts': typeof DashboardPostsRoute
  '/dashboard/userImages': typeof DashboardUserImagesRoute
  '/dashboard/userProfiles': typeof DashboardUserProfilesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard': typeof DashboardIndexRoute
  '/home': typeof HomeIndexRoute
  '/home/$userId/blocked': typeof HomeUserIdBlockedRoute
  '/home/$userId/comments': typeof HomeUserIdCommentsRoute
  '/home/$userId/events': typeof HomeUserIdEventsRoute
  '/home/$userId/likes-received': typeof HomeUserIdLikesReceivedRoute
  '/home/$userId/likes-sent': typeof HomeUserIdLikesSentRoute
  '/home/$userId/matches': typeof HomeUserIdMatchesRoute
  '/home/$userId/messages': typeof HomeUserIdMessagesRoute
  '/home/$userId/posts': typeof HomeUserIdPostsRoute
  '/home/$userId/profile': typeof HomeUserIdProfileRoute
  '/home/$userId/settings': typeof HomeUserIdSettingsRoute
  '/home/$userId/subscriptions': typeof HomeUserIdSubscriptionsRoute
  '/home/$userId': typeof HomeUserIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dashboard': typeof DashboardLazyRouteWithChildren
  '/home': typeof HomeLazyRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/dashboard/comments': typeof DashboardCommentsRoute
  '/dashboard/follows': typeof DashboardFollowsRoute
  '/dashboard/matches': typeof DashboardMatchesRoute
  '/dashboard/posts': typeof DashboardPostsRoute
  '/dashboard/userImages': typeof DashboardUserImagesRoute
  '/dashboard/userProfiles': typeof DashboardUserProfilesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/home/': typeof HomeIndexRoute
  '/home/$userId/blocked': typeof HomeUserIdBlockedRoute
  '/home/$userId/comments': typeof HomeUserIdCommentsRoute
  '/home/$userId/events': typeof HomeUserIdEventsRoute
  '/home/$userId/likes-received': typeof HomeUserIdLikesReceivedRoute
  '/home/$userId/likes-sent': typeof HomeUserIdLikesSentRoute
  '/home/$userId/matches': typeof HomeUserIdMatchesRoute
  '/home/$userId/messages': typeof HomeUserIdMessagesRoute
  '/home/$userId/posts': typeof HomeUserIdPostsRoute
  '/home/$userId/profile': typeof HomeUserIdProfileRoute
  '/home/$userId/settings': typeof HomeUserIdSettingsRoute
  '/home/$userId/subscriptions': typeof HomeUserIdSubscriptionsRoute
  '/home/$userId/': typeof HomeUserIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/home'
    | '/login'
    | '/register'
    | '/dashboard/comments'
    | '/dashboard/follows'
    | '/dashboard/matches'
    | '/dashboard/posts'
    | '/dashboard/userImages'
    | '/dashboard/userProfiles'
    | '/dashboard/users'
    | '/dashboard/'
    | '/home/'
    | '/home/$userId/blocked'
    | '/home/$userId/comments'
    | '/home/$userId/events'
    | '/home/$userId/likes-received'
    | '/home/$userId/likes-sent'
    | '/home/$userId/matches'
    | '/home/$userId/messages'
    | '/home/$userId/posts'
    | '/home/$userId/profile'
    | '/home/$userId/settings'
    | '/home/$userId/subscriptions'
    | '/home/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/register'
    | '/dashboard/comments'
    | '/dashboard/follows'
    | '/dashboard/matches'
    | '/dashboard/posts'
    | '/dashboard/userImages'
    | '/dashboard/userProfiles'
    | '/dashboard/users'
    | '/dashboard'
    | '/home'
    | '/home/$userId/blocked'
    | '/home/$userId/comments'
    | '/home/$userId/events'
    | '/home/$userId/likes-received'
    | '/home/$userId/likes-sent'
    | '/home/$userId/matches'
    | '/home/$userId/messages'
    | '/home/$userId/posts'
    | '/home/$userId/profile'
    | '/home/$userId/settings'
    | '/home/$userId/subscriptions'
    | '/home/$userId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/home'
    | '/login'
    | '/register'
    | '/dashboard/comments'
    | '/dashboard/follows'
    | '/dashboard/matches'
    | '/dashboard/posts'
    | '/dashboard/userImages'
    | '/dashboard/userProfiles'
    | '/dashboard/users'
    | '/dashboard/'
    | '/home/'
    | '/home/$userId/blocked'
    | '/home/$userId/comments'
    | '/home/$userId/events'
    | '/home/$userId/likes-received'
    | '/home/$userId/likes-sent'
    | '/home/$userId/matches'
    | '/home/$userId/messages'
    | '/home/$userId/posts'
    | '/home/$userId/profile'
    | '/home/$userId/settings'
    | '/home/$userId/subscriptions'
    | '/home/$userId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRouteWithChildren
  HomeLazyRoute: typeof HomeLazyRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  DashboardLazyRoute: DashboardLazyRouteWithChildren,
  HomeLazyRoute: HomeLazyRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dashboard",
        "/home",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx",
      "children": [
        "/dashboard/comments",
        "/dashboard/follows",
        "/dashboard/matches",
        "/dashboard/posts",
        "/dashboard/userImages",
        "/dashboard/userProfiles",
        "/dashboard/users",
        "/dashboard/"
      ]
    },
    "/home": {
      "filePath": "home.lazy.tsx",
      "children": [
        "/home/",
        "/home/$userId/blocked",
        "/home/$userId/comments",
        "/home/$userId/events",
        "/home/$userId/likes-received",
        "/home/$userId/likes-sent",
        "/home/$userId/matches",
        "/home/$userId/messages",
        "/home/$userId/posts",
        "/home/$userId/profile",
        "/home/$userId/settings",
        "/home/$userId/subscriptions",
        "/home/$userId/"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/dashboard/comments": {
      "filePath": "dashboard/comments.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/follows": {
      "filePath": "dashboard/follows.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/matches": {
      "filePath": "dashboard/matches.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/posts": {
      "filePath": "dashboard/posts.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/userImages": {
      "filePath": "dashboard/userImages.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/userProfiles": {
      "filePath": "dashboard/userProfiles.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users": {
      "filePath": "dashboard/users.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/home/": {
      "filePath": "home/index.tsx",
      "parent": "/home"
    },
    "/home/$userId/blocked": {
      "filePath": "home/$userId/blocked.tsx",
      "parent": "/home"
    },
    "/home/$userId/comments": {
      "filePath": "home/$userId/comments.tsx",
      "parent": "/home"
    },
    "/home/$userId/events": {
      "filePath": "home/$userId/events.tsx",
      "parent": "/home"
    },
    "/home/$userId/likes-received": {
      "filePath": "home/$userId/likes-received.tsx",
      "parent": "/home"
    },
    "/home/$userId/likes-sent": {
      "filePath": "home/$userId/likes-sent.tsx",
      "parent": "/home"
    },
    "/home/$userId/matches": {
      "filePath": "home/$userId/matches.tsx",
      "parent": "/home"
    },
    "/home/$userId/messages": {
      "filePath": "home/$userId/messages.tsx",
      "parent": "/home"
    },
    "/home/$userId/posts": {
      "filePath": "home/$userId/posts.tsx",
      "parent": "/home"
    },
    "/home/$userId/profile": {
      "filePath": "home/$userId/profile.tsx",
      "parent": "/home"
    },
    "/home/$userId/settings": {
      "filePath": "home/$userId/settings.tsx",
      "parent": "/home"
    },
    "/home/$userId/subscriptions": {
      "filePath": "home/$userId/subscriptions.tsx",
      "parent": "/home"
    },
    "/home/$userId/": {
      "filePath": "home/$userId/index.tsx",
      "parent": "/home"
    }
  }
}
ROUTE_MANIFEST_END */
