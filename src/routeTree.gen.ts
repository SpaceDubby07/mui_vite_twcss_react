/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardUsersImport } from './routes/dashboard/users'
import { Route as DashboardUserProfilesImport } from './routes/dashboard/userProfiles'
import { Route as DashboardPostsImport } from './routes/dashboard/posts'
import { Route as DashboardMatchesImport } from './routes/dashboard/matches'
import { Route as DashboardFollowsImport } from './routes/dashboard/follows'
import { Route as DashboardCommentsImport } from './routes/dashboard/comments'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/sign-up')()
const LogInLazyImport = createFileRoute('/log-in')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))

const LogInLazyRoute = LogInLazyImport.update({
  path: '/log-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/log-in.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUserProfilesRoute = DashboardUserProfilesImport.update({
  path: '/userProfiles',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPostsRoute = DashboardPostsImport.update({
  path: '/posts',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMatchesRoute = DashboardMatchesImport.update({
  path: '/matches',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardFollowsRoute = DashboardFollowsImport.update({
  path: '/follows',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCommentsRoute = DashboardCommentsImport.update({
  path: '/comments',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/log-in': {
      id: '/log-in'
      path: '/log-in'
      fullPath: '/log-in'
      preLoaderRoute: typeof LogInLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/comments': {
      id: '/dashboard/comments'
      path: '/comments'
      fullPath: '/dashboard/comments'
      preLoaderRoute: typeof DashboardCommentsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/follows': {
      id: '/dashboard/follows'
      path: '/follows'
      fullPath: '/dashboard/follows'
      preLoaderRoute: typeof DashboardFollowsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/matches': {
      id: '/dashboard/matches'
      path: '/matches'
      fullPath: '/dashboard/matches'
      preLoaderRoute: typeof DashboardMatchesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/posts': {
      id: '/dashboard/posts'
      path: '/posts'
      fullPath: '/dashboard/posts'
      preLoaderRoute: typeof DashboardPostsImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/userProfiles': {
      id: '/dashboard/userProfiles'
      path: '/userProfiles'
      fullPath: '/dashboard/userProfiles'
      preLoaderRoute: typeof DashboardUserProfilesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardCommentsRoute: typeof DashboardCommentsRoute
  DashboardFollowsRoute: typeof DashboardFollowsRoute
  DashboardMatchesRoute: typeof DashboardMatchesRoute
  DashboardPostsRoute: typeof DashboardPostsRoute
  DashboardUserProfilesRoute: typeof DashboardUserProfilesRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardCommentsRoute: DashboardCommentsRoute,
  DashboardFollowsRoute: DashboardFollowsRoute,
  DashboardMatchesRoute: DashboardMatchesRoute,
  DashboardPostsRoute: DashboardPostsRoute,
  DashboardUserProfilesRoute: DashboardUserProfilesRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/log-in': typeof LogInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/dashboard/comments': typeof DashboardCommentsRoute
  '/dashboard/follows': typeof DashboardFollowsRoute
  '/dashboard/matches': typeof DashboardMatchesRoute
  '/dashboard/posts': typeof DashboardPostsRoute
  '/dashboard/userProfiles': typeof DashboardUserProfilesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/log-in': typeof LogInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/dashboard/comments': typeof DashboardCommentsRoute
  '/dashboard/follows': typeof DashboardFollowsRoute
  '/dashboard/matches': typeof DashboardMatchesRoute
  '/dashboard/posts': typeof DashboardPostsRoute
  '/dashboard/userProfiles': typeof DashboardUserProfilesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/log-in': typeof LogInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/dashboard/comments': typeof DashboardCommentsRoute
  '/dashboard/follows': typeof DashboardFollowsRoute
  '/dashboard/matches': typeof DashboardMatchesRoute
  '/dashboard/posts': typeof DashboardPostsRoute
  '/dashboard/userProfiles': typeof DashboardUserProfilesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/log-in'
    | '/sign-up'
    | '/dashboard/comments'
    | '/dashboard/follows'
    | '/dashboard/matches'
    | '/dashboard/posts'
    | '/dashboard/userProfiles'
    | '/dashboard/users'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/log-in'
    | '/sign-up'
    | '/dashboard/comments'
    | '/dashboard/follows'
    | '/dashboard/matches'
    | '/dashboard/posts'
    | '/dashboard/userProfiles'
    | '/dashboard/users'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/log-in'
    | '/sign-up'
    | '/dashboard/comments'
    | '/dashboard/follows'
    | '/dashboard/matches'
    | '/dashboard/posts'
    | '/dashboard/userProfiles'
    | '/dashboard/users'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
  LogInLazyRoute: typeof LogInLazyRoute
  SignUpLazyRoute: typeof SignUpLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
  LogInLazyRoute: LogInLazyRoute,
  SignUpLazyRoute: SignUpLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/about",
        "/log-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/comments",
        "/dashboard/follows",
        "/dashboard/matches",
        "/dashboard/posts",
        "/dashboard/userProfiles",
        "/dashboard/users",
        "/dashboard/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/log-in": {
      "filePath": "log-in.lazy.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.lazy.tsx"
    },
    "/dashboard/comments": {
      "filePath": "dashboard/comments.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/follows": {
      "filePath": "dashboard/follows.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/matches": {
      "filePath": "dashboard/matches.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/posts": {
      "filePath": "dashboard/posts.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/userProfiles": {
      "filePath": "dashboard/userProfiles.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users": {
      "filePath": "dashboard/users.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
